@mixin theme-colors($background-color, $text-color, $alt-color, $border-color, $alt-background-color) {
  background-color: $background-color;
  color: $text-color;
  .m-header,
  .m-pagination,
  .m-entry__meta,
  .m-notes blockquote {
    a:link, a:visited {
      color: $text-color;
    }
    a:hover, a:active {
      color: $color-links;
    }
  }
  .m-exif {
    span {
      color: $text-color;
    }
  }
  .m-nav,
  .m-tags {
    color: $alt-color;
    a[rel="tag"]:before {
      color: $alt-color;
    }
    a:link, a:visited {
      color: $alt-color;
    }
    a:hover, a:active {
      color: $color-links;
    }
  }
  .m-entry__body blockquote {
    border-color: $border-color;
    p:first-child:before {
      color: $text-color;
    }
  }
  .m-entry__meta {
    color: $text-color;
  }
  .has-separator:before,
  .m-entry__body.caption,
  .m-entry__meta-source,
  .m-pagination p span,
  .m-exif span:before,
  .m-entry__source:before {
    color: $alt-color;
  }
  .m-nav,
  .m-entry.answer .m-entry__body,
  .m-entry table tr,
  .m-notes .notes,
  .m-notes .note,
  .m-notes .answer_content,
  .m-notes blockquote {
    border-color: $border-color;
  }
  .m-notes .note:nth-child(odd),
  .m-entry table tr:nth-child(odd),
  .m-entry.chat .m-entry__body p:nth-child(odd) {
    background-color: $alt-background-color;
  }
}

@mixin wrap-in-quotes($type: 'double') {
  @if $type == 'double' {
    text-indent: -0.3rem;
    &:before {
      content: '“';
    }
    &:after {
      content: '”';
    }
  } @else if $type == 'single' {
    text-indent: -0.3rem;
    &:before {
      content: '‘';
    }
    &:after {
      content: '’';
    }
  }
}

@mixin scale-element($ratio: 16/9, $width: 100%) {
  height: 0;
  padding-top: ((1 / $ratio) * $width);
  position: relative;
  width: $width;
  > * {
    display: block;
    height: 100% !important;
    margin: 0;
    padding: 0;
    position: absolute;
    top: 0;
    width: 100% !important;
  }
}